import OpenAI from "openai";
import { PartialProfileDataType } from "@/types/ProfileType";
import { FortuneResult } from "@/types/FortuneType";

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export async function generateDailyFortune(
  profile: PartialProfileDataType,
): Promise<FortuneResult> {
  console.log("새로운 운세 데이터를 생성합니다...");

  const today = new Date().toLocaleDateString("sv-SE", { timeZone: "Asia/Seoul" }); // YYYY-MM-DD

  const profileInfo = `
이름: ${profile.name || "미정"}
성별: ${profile.gender || "미정"}
생년월일: ${profile.birthDate || "미정"}
달력 유형: ${profile.calendarType || "미정"}
출생 시간: ${profile.unknownTime ? "모름" : `${profile.birthHour || "미정"}시 ${profile.birthMinute || "미정"}분`}
  `.trim();

  const systemPrompt = `
  당신은 20년 이상 경력의 전문 사주명리학 운세 전문가입니다.
  사용자의 사주 정보를 정확히 분석하여 오늘의 운세를 예측해주세요.

  [사주 분석 원칙]
  - 십간(甲乙丙丁戊己庚辛壬癸)과 십이지(子丑寅卯辰巳午未申酉戌亥)의 오행 상생상극 관계를 고려
  - 연주, 월주, 일주, 시주의 조화와 충돌을 분석하여 운세를 판단
  - 오행의 균형(목화토금수)을 고려하여 전체적인 운세의 방향성을 결정
  - 십신(比肩 劫財 食神 傷官 偏財 正財 官殺 偏官 正官)을 통한 인간관계와 재물운 분석

  [운세 다양성 원칙]
  - 사주의 실제 조화도에 따라 운세를 3가지 유형으로 분류:
    * 좋은 날: 사주가 조화롭고 오행이 균형 잡힌 날 (행운지수 4-5, 점수 70-100)
    * 보통 날: 사주가 중립적이거나 약간 불균형한 날 (행운지수 2-3, 점수 40-70)
    * 나쁜 날: 사주가 크게 충돌하거나 오행이 심하게 불균형한 날 (행운지수 1-2, 점수 1-40)

  - 생년월일의 실제 사주 원리를 기반으로 다양한 운세 패턴을 생성
  - 매일 다른 운세 결과를 만들되, 같은 날짜라도 다른 사주라면 다른 결과가 나올 수 있음

  [구체적 분석 요소]
  - 연주: 장기적인 운세의 기초
  - 월주: 한 달간의 운세 흐름
  - 일주: 오늘의 구체적인 운세
  - 시주: 시간대별 운세 변동 (출생시간 정보 활용)

  운세 작성 시 실제 사주 해석 결과를 바탕으로 구체적이고 실용적인 조언을 제공해주세요.
  추상적인 표현보다는 사주 원리에 기반한 구체적인 이유와 대응 방법을 제시해주세요.

  [쉬운 용어 사용 지침]
  - 전문 사주 용어는 쉬운 한국어로 풀어서 설명
  - 십간: 갑을병정무기경신임계
  - 십이지: 자축인묘진사오미신유술해
  - 오행: 나무 불 흙 쇠 물
  - 십신: 비견 겁재 식신 상관 편재 정재 관살 편관 정관
  - 일반인들이 이해하기 쉽게 설명하되 사주 분석의 정확성은 유지

  응답은 반드시 JSON 형식으로만 작성하고, 마크다운 코드 블록이나 기타 설명은 절대 포함하지 마세요.
  모든 내용은 한국어로 작성해주세요.
  `.trim();

  const userPrompt = `
오늘 날짜: ${today}

사용자 사주 정보:
${profileInfo}

[사주 분석 요청사항]
1. 사용자의 생년월일을 바탕으로 정확한 사주(四柱)를 계산하세요:
   - 연주(年柱): 생년의 천간과 지지를 결정
   - 월주(月柱): 생월의 천간과 지지를 결정
   - 일주(日柱): 생일의 천간과 지지를 결정
   - 시주(時柱): 출생 시간의 천간과 지지를 결정

2. 오늘 날짜(${today})의 운세를 분석할 때:
   - 오늘의 일주와 사용자의 사주 간의 상생상극 관계를 분석
   - 오행(木火土金水)의 균형 상태를 평가
   - 십신 관계를 통해 인간관계와 재물운을 판단

3. 운세 다양성 확보:
   - 사주의 실제 조화도에 따라 결과가 달라지도록 분석
   - 생년월일의 실제 사주 원리에 기반한 구체적인 이유 제시
   - 같은 날짜라도 다른 사주라면 다른 운세 결과가 나올 수 있도록 세심하게 분석

4. 구체적인 사주 해석 근거 포함:
   - 어떤 천간/지지가 충돌하는지 구체적으로 언급
   - 오행의 불균형이 어떤 문제를 일으키는지 설명
   - 사주 원리를 바탕으로 한 실용적인 해결방안 제시

위 사주 정보를 정확히 분석하여 오늘의 운세를 예측해주세요.
응답은 반드시 아래 JSON 형식으로만 작성해주세요:

{
  "todayDate": "${today}",
  "fortuneTitle": "오늘의 운세 제목 (20자 이내, 사주 분석 결과에 따른 적절한 어조)",
  "fortuneContent": "사주 분석에 기반한 운세 상세 내용 (200-300자, 구체적인 사주 원리와 실용적인 조언 포함. 한자어 전문용어는 쉬운 한국어로 풀어서 설명: 십간을 갑을병정무기경신임계로, 십이지를 자축인묘진사오미신유술해로, 오행을 나무/불/흙/쇠/물로, 십신을 비견/겁재/식신/상관/편재/정재/관살/편관/정관으로 표기)",
  "luckIndex": "사주 분석 결과에 따른 행운의 지수 (1-5 사이, 실제 사주 조화도에 따라 결정)",
  "luckInfo": {
    "score": "사주 분석에 따른 행운의 점수 (1-100 사이, 오행 균형과 십신 관계 고려)",
    "color": "오늘의 행운의 색상 (사주 오행에 맞는 색상 선택, 컬러코드 예시 #000000)",
    "number": "오늘의 행운의 숫자 (사주와 관련된 숫자)",
    "food": "오늘의 행운의 음식 (사주 오행에 맞는 음식 10자 이내)"
  },
  "twelveStars": {
    "type": "사주 분석에 기반한 12운성 종류 예시 중 가장 가까운 것 하나만 (예: 장생, 목욕, 관대, 제왕, 쇠, 병, 사, 묘, 절, 태, 양, 건록)",
    "description": "12운성과 사주 관계 분석에 기반한 오늘의 조언 또는 경고 (200자 이내, 한자어 대신 쉬운 한국어로 설명)"
  },
  "twelveSinsal": {
    "type": "사주 분석에 기반한 12신살 종류 예시 중 가장 가까운 것 하나만 (예: 천을귀인, 천덕귀인, 문창귀인, 화개살, 홍염살, 백호살, 현침살, 도화살, 역마살, 액살, 재살, 망신살, 고독살, 혈겁살, 공망, 월살, 천살, 귀문관살)",
    "description": "12신살과 사주 관계 분석에 기반한 오늘의 조언 또는 경고 (200자 이내, 한자어 대신 쉬운 한국어로 설명)"
  },
  "advice": {
    "love": "사주 기반 연애운 조언 (15자 이내)",
    "work": "사주 기반 직장/사업운 조언 (15자 이내)",
    "health": "사주 기반 건강운 조언 (15자 이내)",
    "money": "사주 기반 금전운 조언 (15자 이내)"
  }
}
  `.trim();

  const response = await openai.chat.completions.create({
    model: "gpt-4.1-nano",
    messages: [
      { role: "system", content: systemPrompt },
      { role: "user", content: userPrompt },
    ],
    store: false,
  });

  // JSON 문자열을 파싱해서 반환 (null 체크 추가)
  const content = response.choices[0].message.content;
  if (!content) {
    throw new Error("OpenAI API 응답이 비어있습니다.");
  }

  const fortuneResult: FortuneResult = JSON.parse(content);
  return fortuneResult;
}
